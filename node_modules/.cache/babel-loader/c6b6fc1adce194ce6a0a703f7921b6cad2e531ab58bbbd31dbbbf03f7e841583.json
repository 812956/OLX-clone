{"ast":null,"code":"var _jsxFileName = \"/home/junaid/React/olx/src/pages/AddProduct/Add.tsx\",\n  _s = $RefreshSig$();\n// import React,{ useState } from \"react\";\n// import { AddHeader, AddForm ,Form} from \"./style\";\n\n// export default function AddProduct() {\n\n//      const [brand,setBrand] = useState<string>('')\n//      const [name,setName] = useState<string>('')\n//      const [price, setPrice] = useState<string>(\"\");\n//      const [image,setImage] = useState<File | null>(null)\n\n//     // Handle form submission \n\n//     return (\n//      <>\n//        <AddHeader/>\n//        <AddForm>\n//          <h1 id=\"heading\">Post your Ad</h1>\n//          <Form>\n//              <form >\n//                <label >Brand</label>\n//                <input\n//                 value={brand}\n//                 type=\"text\"\n//                 onChange={(e)=> setBrand(e.target.value)}\n//                  />\n//                <label htmlFor=\"\"> Name</label>\n//                <input\n//                 value={name}\n//                 type=\"text\"\n//                 onChange={(e)=> setName(e.target.value)}\n//                  />\n//                <label htmlFor=\"\">Price</label>\n//                <input\n//                 value={price}\n//                 type=\"text\"\n//                 onChange={(e)=> setPrice(e.target.value)}\n//                  />\n//                <label htmlFor=\"\">Image</label>\n//                <input\n//                 type=\"file\"\n//                 onChange={(e)=> setImage(e.target.files ? e.target.files[0] : null)}\n//               />\n//                <label htmlFor=\"\">Submit Form</label>\n//                <button type=\"submit\">Submit</button>\n\n//              </form>\n//          </Form>\n//        </AddForm>\n//      </>\n//     )\n\n// }\n\nimport React, { useState } from \"react\";\nimport { AddHeader, AddForm, Form } from \"./style\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\"; // Firebase imports\nimport { storage } from \"../../firebase/firebaseConfig\"; // Import Firebase storage\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddProduct() {\n  _s();\n  const [brand, setBrand] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(null); // Image file\n  const [imageURL, setImageURL] = useState(\"\"); // URL of the uploaded image\n  const [uploading, setUploading] = useState(false); // Track upload status\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image) {\n      alert(\"Please select an image\");\n      return;\n    }\n    try {\n      setUploading(true);\n\n      // Create a storage reference in Firebase\n      const imageRef = ref(storage, `products/${image.name}`);\n\n      // Upload the file to Firebase Storage\n      await uploadBytes(imageRef, image);\n\n      // Get the file's download URL\n      const downloadURL = await getDownloadURL(imageRef);\n      setImageURL(downloadURL); // Store the URL in state\n      alert(\"File uploaded successfully\");\n\n      // Reset form\n      setBrand(\"\");\n      setName(\"\");\n      setPrice(\"\");\n      setImage(null);\n      setUploading(false);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"heading\",\n        children: \"Post your Ad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: brand,\n            type: \"text\",\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            type: \"text\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: price,\n            type: \"text\",\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setImage(e.target.files ? e.target.files[0] : null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: uploading,\n            children: uploading ? \"Uploading...\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), imageURL && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageURL,\n          alt: \"Uploaded\",\n          width: \"200px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AddProduct, \"3wxedPfVZCQwZ7IA0/pw+YrOQ34=\");\n_c = AddProduct;\nvar _c;\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"names":["React","useState","AddHeader","AddForm","Form","ref","uploadBytes","getDownloadURL","storage","jsxDEV","_jsxDEV","Fragment","_Fragment","AddProduct","_s","brand","setBrand","name","setName","price","setPrice","image","setImage","imageURL","setImageURL","uploading","setUploading","handleSubmit","e","preventDefault","alert","imageRef","downloadURL","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","value","type","onChange","target","files","disabled","src","alt","width","_c","$RefreshReg$"],"sources":["/home/junaid/React/olx/src/pages/AddProduct/Add.tsx"],"sourcesContent":["\n// import React,{ useState } from \"react\";\n// import { AddHeader, AddForm ,Form} from \"./style\";\n\n// export default function AddProduct() {\n     \n//      const [brand,setBrand] = useState<string>('')\n//      const [name,setName] = useState<string>('')\n//      const [price, setPrice] = useState<string>(\"\");\n//      const [image,setImage] = useState<File | null>(null)\n     \n//     // Handle form submission \n    \n  \n   \n//     return (\n//      <>\n//        <AddHeader/>\n//        <AddForm>\n//          <h1 id=\"heading\">Post your Ad</h1>\n//          <Form>\n//              <form >\n//                <label >Brand</label>\n//                <input\n//                 value={brand}\n//                 type=\"text\"\n//                 onChange={(e)=> setBrand(e.target.value)}\n//                  />\n//                <label htmlFor=\"\"> Name</label>\n//                <input\n//                 value={name}\n//                 type=\"text\"\n//                 onChange={(e)=> setName(e.target.value)}\n//                  />\n//                <label htmlFor=\"\">Price</label>\n//                <input\n//                 value={price}\n//                 type=\"text\"\n//                 onChange={(e)=> setPrice(e.target.value)}\n//                  />\n//                <label htmlFor=\"\">Image</label>\n//                <input\n//                 type=\"file\"\n//                 onChange={(e)=> setImage(e.target.files ? e.target.files[0] : null)}\n//               />\n//                <label htmlFor=\"\">Submit Form</label>\n//                <button type=\"submit\">Submit</button>\n\n//              </form>\n//          </Form>\n//        </AddForm>\n//      </>\n//     )\n\n// }\n\nimport React, { useState } from \"react\";\nimport { AddHeader, AddForm, Form } from \"./style\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\"; // Firebase imports\nimport { storage } from  \"../../firebase/firebaseConfig\"; // Import Firebase storage\n\nexport default function AddProduct() {\n  const [brand, setBrand] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [price, setPrice] = useState<string>(\"\");\n  const [image, setImage] = useState<File | null>(null); // Image file\n  const [imageURL, setImageURL] = useState<string>(\"\"); // URL of the uploaded image\n  const [uploading, setUploading] = useState<boolean>(false); // Track upload status\n\n  // Function to handle form submission\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!image) {\n      alert(\"Please select an image\");\n      return;\n    }\n\n    try {\n      setUploading(true);\n\n      // Create a storage reference in Firebase\n      const imageRef = ref(storage, `products/${image.name}`);\n\n      // Upload the file to Firebase Storage\n      await uploadBytes(imageRef, image);\n\n      // Get the file's download URL\n      const downloadURL = await getDownloadURL(imageRef);\n\n      setImageURL(downloadURL); // Store the URL in state\n      alert(\"File uploaded successfully\");\n\n      // Reset form\n      setBrand(\"\");\n      setName(\"\");\n      setPrice(\"\");\n      setImage(null);\n      setUploading(false);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setUploading(false);\n    }\n  };\n\n  return (\n    <>\n      <AddHeader />\n      <AddForm>\n        <h1 id=\"heading\">Post your Ad</h1>\n        <Form>\n          <form onSubmit={handleSubmit}>\n            <label>Brand</label>\n            <input\n              value={brand}\n              type=\"text\"\n              onChange={(e) => setBrand(e.target.value)}\n            />\n            <label>Name</label>\n            <input\n              value={name}\n              type=\"text\"\n              onChange={(e) => setName(e.target.value)}\n            />\n            <label>Price</label>\n            <input\n              value={price}\n              type=\"text\"\n              onChange={(e) => setPrice(e.target.value)}\n            />\n            <label>Image</label>\n            <input\n              type=\"file\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setImage(e.target.files ? e.target.files[0] : null)\n              }\n            />\n            <button type=\"submit\" disabled={uploading}>\n              {uploading ? \"Uploading...\" : \"Submit\"}\n            </button>\n          </form>\n          {imageURL && <img src={imageURL} alt=\"Uploaded\" width=\"200px\" />}\n        </Form>\n      </AddForm>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../firebase/firebaseConfig\";\nexport const fetchData = async () => {\n  try {\n    // reffering the collection\n    const productRef = collection(db, 'products');\n    const productSnap = await getDocs(productRef);\n    const Products = productSnap.docs.map(doc => {\n      return doc.data();\n    });\n    return Products;\n  } catch (error) {\n    console.error('Error Fetching Product', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["collection","getDocs","db","fetchData","productRef","productSnap","Products","docs","map","doc","data","error","console"],"sources":["/home/junaid/React/olx/src/pages/Home/fetch.ts"],"sourcesContent":["import { collection, getDocs } from \"firebase/firestore\";\nimport {db} from \"../../firebase/firebaseConfig\"\n\ninterface Product {\n\n  brand:string;\n  name:string;\n  price:string;\n  imageURL:string;\n}\n\nexport const fetchData = async ():Promise<Product[]> => {\n\n    try{\n\n        // reffering the collection\n        const productRef = collection(db,'products')\n        const productSnap = await getDocs(productRef) \n\n        const Products:Product[] = productSnap.docs.map(doc=> {\n            return doc.data() as Product\n        })\n\n        return Products\n    }\n    catch(error) {\n     \n        console.error('Error Fetching Product',error)\n        throw error;\n\n    }\n   \n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,SAAQC,EAAE,QAAO,+BAA+B;AAUhD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAA+B;EAEpD,IAAG;IAEC;IACA,MAAMC,UAAU,GAAGJ,UAAU,CAACE,EAAE,EAAC,UAAU,CAAC;IAC5C,MAAMG,WAAW,GAAG,MAAMJ,OAAO,CAACG,UAAU,CAAC;IAE7C,MAAME,QAAkB,GAAGD,WAAW,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,IAAG;MAClD,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,OAAOJ,QAAQ;EACnB,CAAC,CACD,OAAMK,KAAK,EAAE;IAETC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAACA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EAEf;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}